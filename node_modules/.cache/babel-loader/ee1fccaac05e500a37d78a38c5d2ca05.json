{"ast":null,"code":"var _jsxFileName = \"/Users/angelo/Desktop/toptal-checkout-react/src/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService';\nimport { useState, useEffect } from 'react'; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = _ref => {\n  let {\n    id,\n    name,\n    availableCount,\n    price,\n    orderedQuantity,\n    total,\n    handleCart\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        onClick: () => handleCart('add', id),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        onClick: () => handleCart('minus', id),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [discout, setDiscount] = useState(0);\n\n  const handleCart = (op, id) => {\n    const updateProduct = products.find(prod => prod.id === id);\n\n    if (op === 'add') {\n      if (updateProduct.orderedQuantity < updateProduct.availableCount) {\n        updateProduct.orderedQuantity = updateProduct.orderedQuantity + 1;\n      }\n    } else {\n      if (updateProduct.orderedQuantity > 0 && updateProduct.orderedQuantity < updateProduct.availableCount) {\n        updateProduct.orderedQuantity = updateProduct.orderedQuantity - 1;\n      }\n    }\n\n    updateProduct.total = (updateProduct.orderedQuantity * updateProduct.price).toFixed(2);\n    const filtered = products.filter(prod => prod.id !== id);\n    setProducts(old => [...filtered, updateProduct].sort((a, b) => a.id - b.id));\n  };\n\n  useEffect(() => {\n    const load = async () => {\n      const response = await getProducts();\n      const formatted = response.map(resp => {\n        return { ...resp,\n          orderedQuantity: 0,\n          total: 0\n        };\n      });\n      setProducts(formatted);\n    };\n\n    load();\n  }, []);\n  useEffect(() => {\n    const totalPrice = products.reduce((total, num) => {\n      console.log(total, num.total);\n      return total + num.total;\n    }, 0);\n    console.log({\n      totalPrice\n    });\n    setTotal(totalPrice);\n  }, [products]);\n  const generatedProps = {\n    handleCart\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => {\n            return /*#__PURE__*/_jsxDEV(Product, { ...product,\n              ...generatedProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), total > 1000 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Discount: $ \", discout, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $ \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"hewKFgY/69ejSiO1k4pL8tbgxy4=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"names":["styles","LoadingIcon","getProducts","useState","useEffect","Product","id","name","availableCount","price","orderedQuantity","total","handleCart","actionButton","Checkout","products","setProducts","setTotal","discout","setDiscount","op","updateProduct","find","prod","toFixed","filtered","filter","old","sort","a","b","load","response","formatted","map","resp","totalPrice","reduce","num","console","log","generatedProps","header","table","product"],"sources":["/Users/angelo/Desktop/toptal-checkout-react/src/Checkout.js"],"sourcesContent":["import styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService';\nimport { useState, useEffect } from 'react';\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nconst Product = ({ id, name, availableCount, price, orderedQuantity, total, handleCart }) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button className={styles.actionButton} onClick={() => handleCart('add', id)}>\n          +\n        </button>\n        <button className={styles.actionButton} onClick={() => handleCart('minus', id)}>\n          -\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [products, setProducts] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [discout, setDiscount] = useState(0);\n\n  const handleCart = (op, id) => {\n    const updateProduct = products.find((prod) => prod.id === id);\n    if (op === 'add') {\n      if (updateProduct.orderedQuantity < updateProduct.availableCount) {\n        updateProduct.orderedQuantity = updateProduct.orderedQuantity + 1;\n      }\n    } else {\n      if (updateProduct.orderedQuantity > 0 && updateProduct.orderedQuantity < updateProduct.availableCount) {\n        updateProduct.orderedQuantity = updateProduct.orderedQuantity - 1;\n      }\n    }\n\n    updateProduct.total = (updateProduct.orderedQuantity * updateProduct.price).toFixed(2);\n    const filtered = products.filter((prod) => prod.id !== id);\n\n    setProducts((old) => [...filtered, updateProduct].sort((a, b) => a.id - b.id));\n  };\n\n  useEffect(() => {\n    const load = async () => {\n      const response = await getProducts();\n      const formatted = response.map((resp) => {\n        return { ...resp, orderedQuantity: 0, total: 0 };\n      });\n      setProducts(formatted);\n    };\n\n    load();\n  }, []);\n\n  useEffect(() => {\n    const totalPrice = products.reduce((total, num) => {\n      console.log(total, num.total);\n      return total + num.total;\n    }, 0);\n    console.log({ totalPrice });\n    setTotal(totalPrice);\n  }, [products]);\n\n  const generatedProps = {\n    handleCart,\n  };\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        <LoadingIcon />\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => {\n              return <Product {...product} {...generatedProps} />;\n            })}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        {total > 1000 && <p>Discount: $ {discout} </p>}\n        <p>Total: $ {total}</p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}